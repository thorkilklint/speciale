## Indhentning af medlemslister fra Wikipedia over Folketinget (2005-2015) 
Følgende har til formål at indhente navne på de politikere, der blev valgt ind i det danske Folketing fra 2005 til 2015 via Wikipedia (dvs. i alt fire valg).

Først indlæses de nødvendige pakker
```{r, message=F, warning=FALSE}
library(rvest) # Kan scrape web-data
library(stringr) # Kan arbejde med strings
library(httr) # Kan tilgå web-data
library(dplyr) # Kan wrangle data
```

Dernæst indlæses de enkelte Wikipedia-sider
```{r, warning=FALSE, eval=FALSE}
#Finder URL til de enkelte valgårs Wikipedia-sider
ft_page_05 <- read_html("https://da.wikipedia.org/wiki/Folketingsmedlemmer_valgt_i_2005")
ft_page_07 <- read_html("https://da.wikipedia.org/wiki/Folketingsmedlemmer_valgt_i_2007")
ft_page_11 <- read_html("https://da.wikipedia.org/wiki/Folketingsmedlemmer_valgt_i_2011")
ft_page_15 <- read_html("https://da.wikipedia.org/wiki/Folketingsmedlemmer_valgt_i_2015")

#Laver xml-lister med navne
xml_navne_ft_05 <- ft_page_05 %>% html_nodes(css = "h2+ ul li") 
xml_navne_ft_07 <- ft_page_07 %>% html_nodes(css = "h2+ ul li") 
xml_navne_ft_11 <- ft_page_11 %>% html_nodes(css = "h2+ ul li") 
xml_navne_ft_15 <- ft_page_15 %>% html_nodes(css = "h2+ ul li") 
```

Herefter trækker vi den relevante tekst fra de enkelte Wikipedia-sider, der er inddelt på valgår.
```{r, warning=FALSE, eval=FALSE}
## Valåret 2005
#Laver en character-liste
navne_ft_05 <- ft_page_05 %>%
  html_nodes(css = "h2+ ul li") %>% #Trækker de relevante lister
  html_text() #Gør til chr-vector, 

# Wikipedia markerer suppleanter med kursiv, så de tages ikke med
navne_ft_05 <- navne_ft_05[!str_detect(xml_navne_ft_05, "<i>")]

# Fjerner dubletter (1 person indgår to gange pga. alfabetisering)
navne_ft_valg_05<-navne_ft_05[!duplicated(navne_ft_05)]

# Splitter i 2 med parti og navn
navne_ft_05_df <- as.data.frame(str_split_fixed(navne_ft_05, "[:space:]\\(", n=2))
names(navne_ft_05_df) <- c("navn", "parti")
navne_ft_05_df$parti <- str_extract(navne_ft_05_df$parti, "[:upper:]{1,3}")
navne_ft_05_df$navn <- as.character(navne_ft_05_df$navn)

# Tager kun komplette cases
navne_ft_05_df<-navne_ft_05_df[complete.cases(navne_ft_05_df),]
```

```{r, warning=FALSE, eval=FALSE}
## Valåret 2007
#Laver en character-liste
navne_ft_07 <- ft_page_07 %>%
  html_nodes(css = "h2+ ul li") %>% #Trækker de relevante lister
  html_text() #Gør til chr-vector, 

# Wikipedia markerer suppleanter med kursiv, så de tages ikke med
navne_ft_07 <- navne_ft_07[!str_detect(xml_navne_ft_07, "Overtog")]

#fjerner dubletter (1 person indgår to gange pga. alfabetisering)
navne_ft_07<-navne_ft_07[!duplicated(navne_ft_07)]

# Splitter i 2 med parti og navn
navne_ft_07_df <- as.data.frame(str_split_fixed(navne_ft_07, "[:space:]\\(", n=2))
names(navne_ft_07_df) <- c("navn", "parti_07")
navne_ft_07_df$parti_07 <- str_extract(navne_ft_07_df$parti_07, "[:upper:]{1,3}")
navne_ft_07_df$navn <- as.character(navne_ft_07_df$navn)

#Tager kun komplette cases
navne_ft_07_df<-navne_ft_07_df[complete.cases(navne_ft_07_df),]
```

```{r, warning=FALSE, eval=FALSE}
## Valgåret 2011
#Laver en character-liste
navne_ft_11 <- ft_page_11 %>%
  html_nodes(css = "h2+ ul li") %>% #Trækker de relevante lister
  html_text() #Gør til chr-vector, 

# Wikipedia markerer suppleanter med kursiv, så de tages ikke med
navne_ft_11 <- navne_ft_11[!str_detect(xml_navne_ft_11, "Overtog|Indtrådt")]

#fjerner dubletter (1 person indgår to gange pga. alfabetisering)
navne_ft_11<-navne_ft_11[!duplicated(navne_ft_11)]

# Splitter i 2 med parti og navn
navne_ft_11_df <- as.data.frame(str_split_fixed(navne_ft_11, "[:space:]\\(", n=2))
names(navne_ft_11_df) <- c("navn", "parti_11")
navne_ft_11_df$parti_11 <- str_extract(navne_ft_11_df$parti_11, "[:upper:]{1,3}")
navne_ft_11_df$navn <- as.character(navne_ft_11_df$navn)

#Tager kun komplette cases
navne_ft_11_df<-navne_ft_11_df[complete.cases(navne_ft_11_df),]
```

```{r, warning=FALSE, eval=FALSE}
## Valgåret 2015
#Laver en character-liste
navne_ft_15 <- ft_page_15 %>%
  html_nodes(css = "h2+ ul li") %>% #Trækker de relevante lister
  html_text() #Gør til chr-vector

# Wikipedia markerer suppleanter med kursiv, så de tages ikke med
navne_ft_15 <- navne_ft_15[!str_detect(xml_navne_ft_15, "<i>")]

# Fjerner dubletter (1 person indgår to gange pga. alfabetisering)
navne_ft_15<-navne_ft_15[!duplicated(navne_ft_15)]

# Splitter i 2 med parti og navn
navne_ft_15_df <- as.data.frame(str_split_fixed(navne_ft_15, "[:space:]\\(", n=2))
names(navne_ft_15_df) <- c("navn", "parti_15")
navne_ft_15_df$parti_15 <- str_extract(navne_ft_15_df$parti_15, "[:upper:]{1,3}")
navne_ft_15_df$navn <- as.character(navne_ft_15_df$navn)
```

Herefter laver vi et navnedatasæt med medlemmerne samt om de er valgt ind et givent år.
```{r, warning=FALSE, eval=FALSE}
# Flere kandidater staves forskelligt, så dem koder vi lige.
navne_ft_11_df$navn[navne_ft_11_df$navn=="Jens Joel Nielsen"]<-"Jens Joel"
navne_ft_15_df$navn[navne_ft_15_df$navn=="Jens Henrik W. Thulesen Dahl"]<-"Jens Henrik Thulesen Dahl"
navne_ft_15_df$navn[navne_ft_15_df$navn=="Lars Chr. Lilleholt"]<-"Lars Christian Lilleholt"
navne_ft_11_df$navn[navne_ft_11_df$navn=="Mai Henriksen"]<-"Mai Mercado"
navne_ft_11_df$navn[navne_ft_11_df$navn=="Nikolaj Barslund Villumsen"]<-"Nikolaj Villumsen"

# Merge data
medlemmer_2007_2015 <- full_join(navne_ft_07_df, navne_ft_11_df, by = "navn") %>%
  full_join(navne_ft_15_df, by = "navn")

medlemmer_2007_2015$parti <- medlemmer_2007_2015$parti_07
medlemmer_2007_2015$parti[is.na(medlemmer_2007_2015$parti)] <- medlemmer_2007_2015$parti_11[is.na(medlemmer_2007_2015$parti)]
medlemmer_2007_2015$parti[is.na(medlemmer_2007_2015$parti)] <- medlemmer_2007_2015$parti_15[is.na(medlemmer_2007_2015$parti)]

#Hvilket år er kandidaten indvalgt?
medlemmer_2007_2015$valgt_07<-!is.na(medlemmer_2007_2015$parti_07)
medlemmer_2007_2015$valgt_11<-!is.na(medlemmer_2007_2015$parti_11)
medlemmer_2007_2015$valgt_15<-!is.na(medlemmer_2007_2015$parti_15)
```

